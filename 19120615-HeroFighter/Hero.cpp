#include "Hero.h"

// Hệ số thủ của đối phương bị giảm khi đối thủ bị khắc (conquered enemy def factor)
constexpr float CnqrdEnmyDEFFctr = 0.5;
// Hệ số công của hero đánh được tăng khi đối thủ bị khắc (conquered enemy my atk factor)
constexpr float CnqrdEnmyMyATKFctr = 1.1; 
// Hệ số thời gian ra đòn của hero bị khắc tăng (conquered by teammate speed factor)
constexpr float CnqrdByTmmtSPDFctr = 1.1;
// Hệ số máu được tăng của hero được tương sinh (generated by teammate hp factor)
constexpr float GnrtdByTmmtHPFctr = 1.15;

Hero::Hero(string name, float hp, float atk, float def, float spd)
{
	sTen = name;
	fMau = hp;
	fCong = atk;
	fThu = def;
	fTocDo = spd;
}

result_t Hero::batDauDanh(Hero& enemy)
{
	/*
		- Ai có thời gian chờ = 0 được đánh trước.
		- Giả sử A đánh B.
		- A đánh B xong thì A phải chờ 1 khoảng thời gian. Do đó gán A.WAIT = A.SPD
		- Đồng thời giảm thời gian chờ của đối phương xuống 1 ms.
		- Giảm thời gian chờ trận đấu xuống 1 ms.
		- Tiếp tục lặp đến khi 1 trong 2 chết hoặc hết giờ.
	*/

	// Thực hiện đánh tới khi nào một trong 2 thua (máu <= 0)
	while (this->fMau * enemy.fMau > 0 && THOIGIANTRANDAU > 0) {
		// Ai có thời gian chờ = 0 được đánh trước
		// Bằng nhau thì pick random
		
		if (this->fWAIT == 0 && enemy.fWAIT == 0) {
			int r = rand() % 2 + 1;
			if (r == 1) {
				this->TanCong(enemy);
			}
			else {
				enemy.TanCong(*this);
			}
		}
		else if (this->fWAIT == 0) {
			this->TanCong(enemy);
		}
		else if (enemy.fWAIT == 0) {
			enemy.TanCong(*this);
		}

		THOIGIANTRANDAU--;
	}

	if (this->fMau > 0 && enemy.fMau > 0) {
		return HOA;
	}
	else if (this->fMau <= 0) {
		return THUA;
	}
	else {
		return THANG;
	}
}

void Hero::capNhtThgSoKhiDoiPhBiKhac(Hero& h1, Hero& h2)
{
	h2.fThu *= CnqrdEnmyDEFFctr;
	h1.fCong *= CnqrdEnmyMyATKFctr;
}

void Hero::capNhtThgSoKhiBiDngDoiKhac()
{
	this->fTocDo *= CnqrdByTmmtSPDFctr;
}

void Hero::capNhtThgSoKhiDcDngDoiSinh()
{
	this->fMau *= GnrtdByTmmtHPFctr;
}

void Hero::TanCong(Hero& enemy)
{
	enemy.fMau -= (this->fCong - enemy.fThu);
	this->fWAIT = this->fTocDo;

	if (enemy.fWAIT > 0) {
		enemy.fWAIT--;
	}
}